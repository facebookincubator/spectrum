# Copyright (c) Facebook, Inc. and its affiliates.

aliases:
 - &filter-only-master
   branches:
     only:
       - master

version: 2
jobs:
  deploy-website:
    docker:
      - image: circleci/node:8.11.1
    steps:
      - checkout
      - run:
          name: Deploying to GitHub Pages
          command: |
            git config --global user.email "docusaurus-bot@users.noreply.github.com"
            git config --global user.name "Website Deployment Script"
            echo "machine github.com login docusaurus-bot password $GITHUB_DOCUSAURUS_TOKEN" > ~/.netrc
            cd website && yarn install && GIT_USER=docusaurus-bot USE_SSH=false yarn run publish-gh-pages
            
  build-android-release-and-sample:
    docker:
      - image: circleci/android:api-28
    steps:
      - checkout
      - run: yes | sdkmanager --licenses || exit 0
      - run: yes | sdkmanager --update || exit 0
      - run:
          name: Setup NDK
          command: |
            wget --quiet https://dl.google.com/android/repository/android-ndk-r17b-linux-x86_64.zip
            unzip -q android-ndk-r17b-linux-x86_64.zip -d /home/circleci
            echo "ndk.dir=/home/circleci/android-ndk-r17b" >> /home/circleci/project/local.properties
            sudo apt-get install file
      - run: ./gradlew prepareNative
      - run: ./gradlew assembleRelease
      - run: ./gradlew android:sample:assembleDebug
      
  test-android-unit-and-instrumented:
    docker:
      - image: circleci/android:api-28
    steps:
      - checkout
      - run: yes | sdkmanager --licenses || exit 0
      - run: yes | sdkmanager --update || exit 0
      - run:
          name: Setup NDK
          command: |
            wget --quiet https://dl.google.com/android/repository/android-ndk-r17b-linux-x86_64.zip
            unzip -q android-ndk-r17b-linux-x86_64.zip -d /home/circleci
            echo "ndk.dir=/home/circleci/android-ndk-r17b" >> /home/circleci/project/local.properties
            sudo apt-get install file
      - run:
          name: Setup emulator
          command: |
            sdkmanager "system-images;android-19;default;armeabi-v7a"
            echo "no" | avdmanager create avd -n test -k "system-images;android-19;default;armeabi-v7a"
      - run:
          name: Launch emulator
          command: emulator -avd test -no-audio -no-window
          background: true
      - run:
          name: Wait for emulator
          command: circle-android wait-for-boot
      - run:
          name: Remove lock screen
          command: adb shell input keyevent 82
      - run: ./gradlew prepareNative
      - run: ./gradlew test
      - run: ./gradlew connectedAndroidTest

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - deploy-website:
          filters: *filter-only-master
      - build-android-release-and-sample
      - test-android-unit-and-instrumented
